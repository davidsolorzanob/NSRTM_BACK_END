server.port=8084
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.url=jdbc:postgresql://localhost:5432/BD_NSRTM_PC
spring.jpa.database=POSTGRESQL
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.platform=postgres
spring.jpa.properties.hibernate.dialect= org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql=false

resilience4j.timelimiter.configs.default.timeout-duration=2s
resilience4j.timelimiter.instances.viaServiceTime.base-config=default
resilience4j.timelimiter.instances.viaServiceTime.timeout-duration=1s
resilience4j.timelimiter.instances.viaServiceTime.cancel-running-future=true

resilience4j.bulkhead.configs.default.max-concurrent-calls=2
resilience4j.bulkhead.configs.default.max-wait-duration=0
resilience4j.bulkhead.instances.viaServiceBulk.base-config=default

#Configuración REDIS
spring.cache.type=REDIS
spring.cache.redis.time-to-live:3600000
spring.redis.host=localhost
spring.redis.port=6379
#spring.redis.password=password123
spring.redis.database=0
spring.redis.timeout=5000
# El número máximo de conexiones en el grupo de conexiones (use un valor negativo para indicar que no hay límite)
spring.redis.pool.max-active=8  
# El tiempo de espera de bloqueo máximo del grupo de conexiones (use un valor negativo para indicar que no hay límite)
spring.redis.pool.max-wait=-1  
# La conexión gratuita más grande en el grupo de conexiones
spring.redis.pool.max-idle=8  
# La conexión inactiva más pequeña en el grupo de conexiones
spring.redis.pool.min-idle=0  
# Tiempo de espera de conexión (milisegundos)
spring.redis.timeout=3000


#Configuración de CORS
cors.allowCredentials= false
cors.allowHeaders= *
cors.allowMethods= GET,POST,PUT,DELETE,OPTIONS
cors.allowOrigins= *
cors.exposedHeaders= *
cors.maxAge=3600
cors.mapping=/**